{% capture all_output %}
{% comment %} version: 1.6.4 {% endcomment %}
{% comment %} PLEASE DO NOT MODIFY THIS FILE, DOING SO MAY BREAK YOUR PRODUCT OPTIONS {% endcomment %}

{% comment %} Hide line item pricing rows {% endcomment %}
{% if product-personalizer-helper == 'hide-pricing-item-row' %}
{% if item.properties._pc_pricing_ref and item.properties._pc_pricing_qty == null %}
display:none;
{% endif %}
{% endif %}

{% comment %} Add the product pricing ref and pricing product quantity {% endcomment %}
{% if product-personalizer-helper == 'cart-row-data' %}
{% if item.properties._pc_pricing_ref != null %}
data-product-personalizer-pricing-ref="{{ item.properties._pc_pricing_ref }}"
{% endif %}
{% if item.properties._pc_pricing_qty != null %}
data-product-personalizer-pricing-qty="{{ item.propertsies._pc_pricing_qty }}"
{% endif %}
{% if item.properties._pc_pricing_origin != null %}
data-product-personalizer-pricing-origin="{{ item.properties._pc_pricing_origin }}"
{% endif %}

{% if item.properties._pc_pricing_ref != null and item.properties._pc_pricing_origin == null %}
data-product-personalizer-pricing-auxiliary="{{ item.properties._pc_pricing_ref }}"
{% endif %}

data-line="{{ forloop.index }}"
{% endif %}

{% comment %}
Display the line item properties (default action).
required: item. optional: file_upload_text (defaults to 'Click to see'), 
file_upload_class (defaults to null), use_original_file_name (defaults to true)
{% endcomment %}
{% if product-personalizer-helper == 'line-item-properties' or product-personalizer-helper == null %}
<br>
{% assign propertySize = item.properties | size %}
{% if propertySize > 0 %}
{% for p in item.properties %}
{% assign hidden_property = p.first | first | replace: '_', true %}
{% unless p.last == blank %}
{% if hidden_property == 'true' %}
<span style="display:none;" class="product-personalizer-line-item-prop" data-prop-name="{{ p.first }}">{{ p.first }}: {{ p.last }}</span>
{% else %}
{% if p.last contains '/assets/' %}
{% assign foo = p.last %}
{% assign my_variable = true %}
{% endif %}
{{ p.first }}:
{% if p.last contains '/uploads/' or p.last contains '/assets/' or p.last contains '/products/' %}
<a target="_blank"  href="{{ p.last }}" src="{{ p.last }}" class="jslghtbx-thmb" data-jslghtbx download>{% if shop.metafields.customify['clickable_text'] %} {{ shop.metafields.customify['clickable_text'] }}{% else %}Click to view image{% endif %}</a>
{% else %}
{{ p.last | newline_to_br }}
{% endif %}
<br>
{% endif %}
{% endunless %}
{% endfor %}
{% endif %}
{% endif %}

{% comment %} Fix the line item remove from cart link {% endcomment %}
{% if product-personalizer-helper == 'remove-from-cart-href' %}
{% if item.properties._pc_pricing_ref and item.properties._pc_pricing_qty %}
#{{ forloop.index }}
{% else %}
/cart/change?line={{ forloop.index }}&amp;quantity=0
{% endif %}
{% endif %}

{% comment %} Fix the line item remove from cart link {% endcomment %}
{% if product-personalizer-helper == 'remove-from-cart-class' %}
{% if item.properties._pc_pricing_ref and item.properties._pc_pricing_qty %}
product-personalizer-cart-remove
{% else %}
{{ else_class }}
{% endif %}
{% endif %}

{% comment %} Get the line item price. required: item or _item_line_price, items. optional: raw {% endcomment %}
{% if product-personalizer-helper == 'item-line-price' %}
{% if _item_line_price == null %}
{% assign _item_line_price = item.line_price %}
{% endif %}
{% if item.properties._pc_pricing_ref and item.properties._pc_pricing_qty %}
{% for other_item in items %}
{% if other_item.properties._pc_pricing_qty == null and other_item.properties._pc_pricing_ref == item.properties._pc_pricing_ref %}
{% assign _item_line_price = _item_line_price | plus: other_item.line_price %}
{% endif %}
{% endfor %}
{% endif %}
{% if raw == true %}
{{ _item_line_price }}
{% else %}
{{ _item_line_price | money }}
{% endif %}
{% assign _item_line_price = null %}
{% endif %}

{% comment %} Get the item price. required: item or _item_price, items. optional: raw {% endcomment %}
{% if product-personalizer-helper == 'item-price' %}
{% if _item_price == null %}
{% assign _item_price = item.price %}
{% endif %}
{% if item.properties._pc_pricing_ref and item.properties._pc_pricing_qty %}
{% for other_item in items %}
{% if other_item.properties._pc_pricing_qty == null and other_item.properties._pc_pricing_ref == item.properties._pc_pricing_ref %}
{% assign _item_price = _item_price | plus: item.properties._pc_pricing_qty %}
{% endif %}
{% endfor %}
{% endif %}
{% if raw == true %}
{{ _item_price }}
{% else %}
{{ _item_price | money }}
{% endif %}
{% assign _item_price = null %}
{% endif %}

{% comment %} Fix the cart bubble count. required: cart. optional: _cart_item_count {% endcomment %}
{% if product-personalizer-helper == 'cart-item-count' %}
{% if _cart_item_count == null %}
{% assign _cart_item_count = cart.item_count %}
{% endif %}
{% for cart_item in cart.items %}
{% if cart_item.properties._pc_pricing_ref and cart_item.properties._pc_pricing_qty == null %}
{% assign _cart_item_count = _cart_item_count | minus: cart_item.quantity %}
{% endif %}
{% endfor %}
{{ _cart_item_count }}
{% assign _cart_item_count = null %}
{% endif %}

{% if product-personalizer-helper == 'product-personalizer-script' %}
<script>

  var loadScript = function(url, callback) {
    var script = document.createElement("script")
    script.type = "text/javascript";
    if (script.readyState) {
      script.onreadystatechange = function() {
        if (script.readyState == "loaded" ||
            script.readyState == "complete") {
          script.onreadystatechange = null;
          callback();
        }
      };
    } else {
      script.onload = function() {
        callback();
      };
    }
    script.src = url;
    document.getElementsByTagName("head")[0].appendChild(script);
  };

  document.addEventListener("DOMContentLoaded", function(event) {
    if ((typeof $ === 'undefined') && (typeof jQuery === 'undefined')) {
      loadScript('//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js', function() {
        pplr_cart(jQuery);
      });
    }
    else{
      pplr_cart(jQuery);
    }
    function pplr_cart(jQuery){

      var cartElSelector = '.product-personalizer-cart-remove';
      jQuery(document).on('click', cartElSelector, function(event) {
        event.preventDefault();
        var personalizedItemRow = jQuery(this).closest('[data-product-personalizer-pricing-ref][data-product-personalizer-pricing-qty]');

        if(personalizedItemRow.attr('data-product-personalizer-pricing-ref')!==""){
          jQuery.ajax({
            type: "POST",
            url: "/cart/change.js",
            data: "line="+(parseInt(personalizedItemRow.attr('data-line'))+1)+"&quantity=0",
            dataType: "json",
            success: function() { 
              jQuery.ajax({
                type: "POST",
                url: "/cart/change.js",
                data: "line="+(parseInt(personalizedItemRow.attr('data-line')))+"&quantity=0",
                dataType: "json",
                success: function() { 

                  location.href="/cart";

                }
              });

            },
            error : function() { 
              location.href="/cart/change?line="+parseInt(personalizedItemRow.attr('data-line'))+"&amp;quantity=0";

            }
          });
        }
        else{

          location.href="/cart/change?line="+personalizedItemRow.attr('data-line')+"&amp;quantity=0";
        } 
      });
      
      
     jQuery('input[name*="updates["]:visible').each(function(){
        var personalizedItemNum = jQuery(this).closest('[data-product-personalizer-pricing-ref][data-product-personalizer-pricing-qty]');
        if(personalizedItemNum[0]){
          jQuery(this).siblings('.js-change-quantity,.js-qty__adjust,.QuantitySelector__Button').remove();
          jQuery(this).removeClass('quantity js-qty__input').css("min-width","60px");
          jQuery(this).attr('type','number');
        }
        
      })
       
     jQuery("body").on('change', 'input[name*="updates["]:visible', function(event) {
        var personalizedItemNum = jQuery(this).closest('[data-product-personalizer-pricing-ref][data-product-personalizer-pricing-qty]');
        if(personalizedItemNum[0]){
          var ref_pplr = personalizedItemNum.attr('data-product-personalizer-pricing-ref');
          var qty_pplr = parseInt(personalizedItemNum.attr('data-product-personalizer-pricing-qty')) || 0;
          var price_pplr = parseInt(personalizedItemNum.attr('data-product-personalizer-pricing-origin'));
          var data_id = parseInt(personalizedItemNum.attr('data-line'))+1;
          if(qty_pplr == 0 ){
            qty_pplr = parseInt(personalizedItemNum.find('[data-prop-name="_pc_pricing_qty"]').text().split(' ')[1]);
          }
          personalizedItemNum.siblings('[data-product-personalizer-pricing-ref][data-line="'+data_id+'"]').find('input[name*="updates["]').val(parseInt(jQuery(this).val())* qty_pplr/price_pplr);
          
          if(jQuery('input[name="update"],button[name="update"]')[0]){
           jQuery('input[name="update"],button[name="update"]').trigger('click');
          }
          else{
            jQuery(this).closest('form').append('<button style="display:none" class="pplr_update" type="submit" name="update"></button>');
             jQuery('#cart_agree').prop('disabled',true);
            jQuery('.pplr_update').trigger('click'); 
          }
        }
      })

    }
  })

</script>


<link rel="stylesheet" href="//cdn.jsdelivr.net/npm/jsonlylightbox@0.5.5/css/lightbox.min.css" />
<script src="//cdn.jsdelivr.net/npm/jsonlylightbox@0.5.5/js/lightbox.min.js"></script>

<script>
  var lightbox = new Lightbox();
  lightbox.load();
</script> 
<style>
  .jslghtbx-thmb:hover, .jslghtbx-thmb {
    box-shadow:inherit;margin: 0;
  }
  .jslghtbx {
    z-index: 99999999999 !important;
  }
</style>

{% endif %}

{% endcapture %}{{ all_output | strip }}